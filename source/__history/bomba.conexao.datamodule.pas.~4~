unit bomba.conexao.datamodule;

interface

uses
  System.SysUtils, System.Classes, System.IniFiles, Vcl.Forms, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async,
  FireDAC.Phys, FireDAC.Phys.FB, FireDAC.Phys.FBDef, FireDAC.VCLUI.Wait, FireDAC.Phys.IBBase, Data.DB,
  FireDAC.Comp.Client;

type
  TdmConexao = class(TDataModule)
    fdconBomba: TFDConnection;
    FDPhysFBDriverLink1: TFDPhysFBDriverLink;
  private
    { Private declarations }
  public
    procedure GetConnectionInfo;
  end;

var
  dmConexao: TdmConexao;

implementation

uses
  FireDAC.Phys.IBWrapper;

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

{ TdmConexao }

procedure TdmConexao.GetConnectionInfo;
var
  ArquivoIni: TIniFile;
begin
  try
    ArquivoIni := TIniFile.Create(ExtractFilePath(Application.ExeName)+'bomba.ini');
    with fdconBomba.Params as TFDPhysFBConnectionDefParams do
    begin
      Protocol := TIBProtocol.ipTCPIP;
      Server := ArquivoIni.ReadString('database', 'server', 'localhost');
      Port := ArquivoIni.ReadInteger('database', 'port', 3050);
      Database := ArquivoIni.ReadString('database', 'pathdb', '');
      Password := ArquivoIni.ReadString('database', 'password', '');
      UserName := ArquivoIni.ReadString('database', 'user', '');
    end;
  finally
    ArquivoIni.Free;
  end;
end;

end.
